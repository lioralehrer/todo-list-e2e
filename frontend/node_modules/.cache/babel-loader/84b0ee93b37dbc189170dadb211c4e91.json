{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\src\\\\components\\\\Container\\\\Container.jsx\";\nimport React from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport TasksList from \"../TasksList/TasksList\";\nimport TaskForm from \"../TaskForm/TaskForm\";\nimport \"./Container.css\";\nimport * as api from \"../../utils/todoApi\";\n\nclass Container extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n      doneTasks: []\n    };\n    this.handleNewTask = this.handleNewTask.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleRemoveFromDoneList = this.handleRemoveFromDoneList.bind(this);\n    this.handleRedo = this.handleRedo.bind(this);\n    this.handleByPriority = this.handleByPriority.bind(this);\n  }\n\n  componentDidMount() {\n    api.getTasks(oldTasks => {\n      this.setState({\n        tasks: oldTasks.all\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  handleNewTask(task) {\n    api.createTask(task, newTask => {\n      this.setState({\n        tasks: [...this.state.tasks, newTask]\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  handleDone(taskid) {\n    // move the task from the tasks list and put it in done list\n    let tasks = Object.assign([], this.state.tasks);\n    let doneTask = tasks.splice(taskid, 1);\n    this.setState({\n      doneTasks: [...this.state.doneTasks, doneTask[0]],\n      tasks: tasks,\n      isStar: false,\n      byPriority: false\n    });\n  }\n\n  handleByPriority() {\n    // take the array and show it by priority:\n    let tasks = Object.assign([], this.state.tasks);\n    tasks.sort((a, b) => parseInt(a.priority) < parseInt(b.priority) ? 1 : parseInt(b.priority) < parseInt(a.priority) ? -1 : 0);\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  handleRemove(task) {\n    api.removeTask(task, editedtasks => {\n      let tasks = Object.assign([], editedtasks.all());\n      this.setState({\n        tasks: tasks\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  handleRemoveFromDoneList(taskid) {\n    let doneTasks = [...this.state.doneTasks];\n    doneTasks.splice(taskid, 1);\n    this.setState({\n      doneTasks: doneTasks\n    });\n  }\n\n  handleRedo(taskid) {\n    let doneTasks = [...this.state.doneTasks];\n    let tasks = doneTasks.splice(taskid, 1);\n    this.setState({\n      tasks: [...this.state.tasks, tasks[0]],\n      doneTasks: doneTasks\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TaskForm, {\n      handleNewTask: this.handleNewTask,\n      handlePriority: this.handleByPriority,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-xs-6 list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Todo\"), React.createElement(TasksList, {\n      tasks: this.state.tasks,\n      handleDone: this.handleDone,\n      handleRemove: this.handleRemove,\n      hideredo: \"hide-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6 col-xs-6 list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Done\"), React.createElement(TasksList, {\n      tasks: this.state.doneTasks,\n      hidedone: \"hide-done\",\n      handleRemove: this.handleRemoveFromDoneList,\n      handleRedo: this.handleRedo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["C:\\Users\\USER\\projects\\todo-list-e2e\\frontend\\src\\components\\Container\\Container.jsx"],"names":["React","Header","Footer","TasksList","TaskForm","api","Container","Component","constructor","state","tasks","doneTasks","handleNewTask","bind","handleRemove","handleDone","handleRemoveFromDoneList","handleRedo","handleByPriority","componentDidMount","getTasks","oldTasks","setState","all","error","console","log","task","createTask","newTask","taskid","Object","assign","doneTask","splice","isStar","byPriority","sort","a","b","parseInt","priority","removeTask","editedtasks","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"../Header/Header\"\r\nimport Footer from \"../Footer/Footer\"\r\nimport TasksList from \"../TasksList/TasksList\"\r\nimport TaskForm from \"../TaskForm/TaskForm\"\r\nimport \"./Container.css\"\r\nimport * as api from \"../../utils/todoApi\";\r\nclass Container extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tasks: [],\r\n            doneTasks: []\r\n        };\r\n        this.handleNewTask = this.handleNewTask.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleDone = this.handleDone.bind(this);\r\n        this.handleRemoveFromDoneList = this.handleRemoveFromDoneList.bind(this);\r\n        this.handleRedo = this.handleRedo.bind(this);\r\n        this.handleByPriority = this.handleByPriority.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        api.getTasks(\r\n            oldTasks => {\r\n                this.setState({ tasks: oldTasks.all })\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleNewTask(task) {\r\n        api.createTask(task,\r\n            newTask => {\r\n                this.setState({\r\n                    tasks: [...this.state.tasks, newTask]\r\n                });\r\n            },\r\n            error => { console.log(error); }\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n    handleDone(taskid) {\r\n        // move the task from the tasks list and put it in done list\r\n        let tasks = Object.assign([], this.state.tasks);\r\n        let doneTask = tasks.splice(taskid, 1);\r\n        this.setState({\r\n            doneTasks: [...this.state.doneTasks, doneTask[0]],\r\n            tasks: tasks,\r\n            isStar: false,\r\n            byPriority: false\r\n        })\r\n    }\r\n    handleByPriority() {\r\n        // take the array and show it by priority:\r\n        let tasks = Object.assign([], this.state.tasks);\r\n        tasks.sort((a, b) => (parseInt(a.priority) < parseInt(b.priority)) ? 1 : ((parseInt(b.priority) < parseInt(a.priority)) ? -1 : 0));\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n    }\r\n    handleRemove(task) {\r\n        api.removeTask(task,\r\n            editedtasks => {\r\n                let tasks = Object.assign([], editedtasks.all());\r\n                this.setState({  tasks: tasks })\r\n            },\r\n                error => { console.log(error); }\r\n                    \r\n           );\r\n    }\r\n    handleRemoveFromDoneList(taskid) {\r\n        let doneTasks = [...this.state.doneTasks];\r\n        doneTasks.splice(taskid, 1);\r\n        this.setState({\r\n            doneTasks: doneTasks\r\n        })\r\n    }\r\n    handleRedo(taskid) {\r\n        let doneTasks = [...this.state.doneTasks];\r\n        let tasks = doneTasks.splice(taskid, 1);\r\n        this.setState({\r\n            tasks: [...this.state.tasks, tasks[0]],\r\n            doneTasks: doneTasks\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <TaskForm handleNewTask={this.handleNewTask} handlePriority={this.handleByPriority} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-xs-6 list\">\r\n                        <h3>Todo</h3>\r\n                        <TasksList tasks={this.state.tasks} handleDone={this.handleDone} handleRemove={this.handleRemove} hideredo=\"hide-redo\" />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 col-xs-6 list\">\r\n                        <h3>Done</h3>\r\n                        <TasksList tasks={this.state.doneTasks} hidedone=\"hide-done\" handleRemove={this.handleRemoveFromDoneList} handleRedo={this.handleRedo} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Footer />\r\n            </div >\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Container;"]},"metadata":{},"sourceType":"module"}