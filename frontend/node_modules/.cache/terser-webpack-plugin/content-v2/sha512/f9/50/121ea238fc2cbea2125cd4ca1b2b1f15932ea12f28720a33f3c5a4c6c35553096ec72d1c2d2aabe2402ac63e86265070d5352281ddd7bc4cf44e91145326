{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\src\\\\App.js\",\"C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\src\\\\index.js\"],\"names\":[\"App\",\"react_default\",\"a\",\"createElement\",\"Container_default\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"2rGAUeA,IAAAA,EANf,WACE,OACDC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,aCMmBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\r\\nimport './App.css';\\r\\nimport Container from './components/Container/Container';\\r\\n\\r\\nfunction App() {\\r\\n  return (\\r\\n <Container/>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read https://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport 'bootstrap/dist/css/bootstrap.css';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,o){throw new Error('Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\src\\\\components\\\\Container\\\\Container.jsx: Unexpected token, expected \";\" (73:13)\\n\\n\\x1b[0m \\x1b[90m 71 | \\x1b[39m            error \\x1b[33m=>\\x1b[39m {\\x1b[0m\\n\\x1b[0m \\x1b[90m 72 | \\x1b[39m                console\\x1b[33m.\\x1b[39mlog(error)\\x1b[33m;\\x1b[39m\\x1b[0m\\n\\x1b[0m\\x1b[31m\\x1b[1m>\\x1b[22m\\x1b[39m\\x1b[90m 73 | \\x1b[39m            })\\x1b[33m;\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m    | \\x1b[39m             \\x1b[31m\\x1b[1m^\\x1b[22m\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 74 | \\x1b[39m  \\x1b[0m\\n\\x1b[0m \\x1b[90m 75 | \\x1b[39m    }\\x1b[0m\\n\\x1b[0m \\x1b[90m 76 | \\x1b[39m    handleRemoveFromDoneList(taskid) {\\x1b[0m\\n    at Object.raise (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:6344:17)\\n    at Object.unexpected (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:7659:16)\\n    at Object.semicolon (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:7641:40)\\n    at Object.parseExpressionStatement (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10323:10)\\n    at Object.parseExpressionStatement (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:2046:18)\\n    at Object.parseStatementContent (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9922:19)\\n    at Object.parseStatement (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9788:17)\\n    at Object.parseStatement (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:2019:26)\\n    at Object.parseBlockOrModuleBlockBody (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10364:25)\\n    at Object.parseBlockBody (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10351:10)\\n    at Object.parseBlock (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10335:10)\\n    at Object.parseFunctionBody (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9408:24)\\n    at forwardNoArrowParamsConversionAt (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1997:70)\\n    at Object.forwardNoArrowParamsConversionAt (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:2193:16)\\n    at Object.parseFunctionBody (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1997:19)\\n    at Object.parseArrowExpression (C:\\\\Users\\\\USER\\\\projects\\\\todo-list-e2e\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:9349:10)')},function(e,o,n){e.exports=n(13)},,,,,,function(e,o,n){},function(e,o,n){},,function(e,o,n){\"use strict\";n.r(o);var t=n(0),s=n.n(t),r=n(2),d=n.n(r),a=(n(10),n(11),n(3)),l=n.n(a);var i=function(){return s.a.createElement(l.a,null)};n(12),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));d.a.render(s.a.createElement(i,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[4,1,2]]]);","extractedComments":[]}